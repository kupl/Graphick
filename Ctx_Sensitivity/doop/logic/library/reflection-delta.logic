/**
 * TODO Reified classes are generated by soot-fact-generation. Perhaps
 *      a bit confusing. generating them here anyway would not hurt.
 *
 * TODO Heap allocations should not be instructions (the heap
 *      allocation is contained in an instruction)
 */

#include "fact-macros.logic"

+ReflectiveHeapAllocation[?invocation, ?type]  = ?heap,
+InstructionRef:Value(?heap:?strHeap),
+HeapAllocationRef(?heap),
+HeapAllocation:Type[?heap] = ?type
  <-
  java:lang:Class:newInstance@previous(?invocation, _, _),
  ClassType(?type),
  Type:Value(?type:?strType),
  ?strHeap = "<reflective Class.newInstance " + ?strType + ">".
//  InstructionRef:Value@prev(?invocation:?strInvocation),
//  ?strHeap = "<reflective Class.newInstance " + ?strInvocation + ?strType + ">".

+ReflectiveHeapAllocation[?invocation, ?type]  = ?heap,
+InstructionRef:Value(?heap:?strHeap),
+HeapAllocationRef(?heap),
+HeapAllocation:Type[?heap] = ?type
  <-
  java:lang:reflect:Constructor:newInstance@previous(?invocation, _, _),
  ClassType(?type),
  Type:Value(?type:?strType),
  ?strHeap = "<reflective Constructor.newInstance " + ?strType + ">".
//  InstructionRef:Value@prev(?invocation:?strInvocation),
//  ?strHeap = "<reflective Constructor.newInstance " + ?strInvocation + ?strType + ">".

/**
 * Heap allocations for reified constructors (java.lang.reflect.Constructor)
 */
+ReifiedConstructor[?signature] = ?heap,
+InstructionRef:Value(?heap:?strHeap),
+HeapAllocationRef(?heap),
+HeapAllocation:Type[?heap] = ?type
  <-
  SimpleNameRef:Value(?init:"<init>"),
  MethodSignature:SimpleName[?signature] = ?init,
  MethodSignatureRef:Value(?signature:?strSignature),
  ?strHeap = "<reified constructor " + ?strSignature + ">",
  Type:Value(?type:"java.lang.reflect.Constructor").

/**
 * Heap allocations for reified methods (java.lang.reflect.Method).
 */
+ReifiedMethod[?signature] = ?heap,
+InstructionRef:Value(?heap:?strHeap),
+HeapAllocationRef(?heap),
+HeapAllocation:Type[?heap] = ?type
  <-
  MethodSignature:SimpleName[?signature] = ?simplename,
  SimpleNameRef:Value(?init:"<init>"),
  ?simplename != ?init,
  SimpleNameRef:Value(?clinit:"<clinit>"),
  ?simplename != ?clinit,
  MethodSignatureRef:Value(?signature:?strSignature),
  ?strHeap = "<reified method " + ?strSignature + ">",
  Type:Value(?type:"java.lang.reflect.Method").

/**
 * Heap allocations for reified fields (java.lang.reflect.Field).
 */
+ReifiedField[?x] = ?heap,
+InstructionRef:Value(?heap:?strHeap),
+HeapAllocationRef(?heap),
+HeapAllocation:Type[?heap] = ?type
  <-
  FieldSignatureRef:Value(?x:?signature),
  ?strHeap = "<reified field " + ?signature + ">",
  Type:Value(?type:"java.lang.reflect.Field").
