/*****************************************************************************
 *
 * Compute for an instruction which exception handlers handle which
 * exception types.
 *
 * This is an imprecise version, mostly for intended for experiments.
 *
 ****************************************************************************/

ExceptionHandler(?handler, ?instruction, ?type) ->
  ExceptionHandlerRef(?handler),
  Type(?type),
  InstructionRef(?instruction).

ExceptionHandler(?handler, ?instruction, ?type) <-
#ifdef EXCEPTIONS_RANGE
  ExceptionHandler:InRange(?handler, ?instruction),
#else
  Instruction:Method[?instruction] = ?method,
  ExceptionHandler:Method(?handler, ?method),
#endif
  ExceptionHandler:Type[?handler] = ?type.

ExceptionHandler(?handler, ?instruction, ?subtype) <-
#ifdef EXCEPTIONS_RANGE
  ExceptionHandler:InRange(?handler, ?instruction),
#else
  Instruction:Method[?instruction] = ?method,
  ExceptionHandler:Method(?handler, ?method),
#endif
  ExceptionHandler:Type[?handler] = ?type,
  Superclass(?subtype, ?type).

#ifdef EXCEPTIONS_RANGE
ExceptionHandler:InRange(?handler, ?instruction) ->
  ExceptionHandlerRef(?handler),
  InstructionRef(?instruction).

ExceptionHandler:InRange(?handler, ?instruction) <-
  Instruction:Method[?instruction] = ?method,
  ExceptionHandler:Method(?handler, ?method),
  Instruction:Index[?instruction] = ?index,
  ExceptionHandler:Begin[?handler] = ?begin,
  ?begin <= ?index,
  ExceptionHandler:End[?handler] = ?end,
  ?index < ?end.
#endif
