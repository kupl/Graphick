/*****************************************************************************
 *
 * Exceptions
 *
 * This version is for experiments only.
 *
 *****************************************************************************/

#ifdef EXCEPTIONS_CS
ThrowPointsTo(?hctx, ?heap, ?ctx, ?method) ->
  HContext(?hctx), HeapAllocationRef(?heap),
  Context(?ctx), MethodSignatureRef(?method).
#else
ThrowPointsTo(?hctx, ?heap, ?method) ->
  HContext(?hctx), HeapAllocationRef(?heap),
  MethodSignatureRef(?method).
#endif

#ifdef EXCEPTIONS_CS
ThrowPointsTo(?hctx, ?heap, ?ctx, ?method) <-
  Throw(?ref, ?var),
  VarPointsTo(?hctx, ?heap, ?ctx, ?var),
#else
ThrowPointsTo(?hctx, ?heap, ?method) <-
  Throw(?ref, ?var),
  VarPointsTo(?hctx, ?heap, _, ?var),
#endif
#ifdef EXCEPTIONS_FILTER
  HeapAllocation:Type[?heap] = ?heaptype,
#ifdef EXCEPTIONS_ORDER
  !(ExceptionHandler[?ref, ?heaptype]=_),
#else
  ! ExistsExceptionHandler(?ref, ?heaptype),
#endif
#endif
  Instruction:Method[?ref] = ?method.

#ifdef EXCEPTIONS_CS
ThrowPointsTo(?hctx, ?heap, ?callerCtx, ?callerMethod) <-
  CallGraphEdge(?callerCtx, ?invocation, ?calleeCtx, ?tomethod),
  ThrowPointsTo(?hctx, ?heap, ?calleeCtx, ?tomethod),
#else
ThrowPointsTo(?hctx, ?heap, ?callerMethod) <-
  CallGraphEdge(_, ?invocation, _, ?tomethod),
  ThrowPointsTo(?hctx, ?heap, ?tomethod),
#endif
#ifdef EXCEPTIONS_FILTER
  HeapAllocation:Type[?heap] = ?heaptype,
#ifdef EXCEPTIONS_ORDER
  ! (ExceptionHandler[?invocation, ?heaptype]=_),
#else
  ! ExistsExceptionHandler(?invocation, ?heaptype),
#endif
#endif
  Instruction:Method[?invocation] = ?callerMethod.

VarPointsTo(?hctx, ?heap, ?ctx, ?param) <-
  Throw(?ref, ?var),
  VarPointsTo(?hctx, ?heap, ?ctx, ?var),
  HeapAllocation:Type[?heap] = ?heaptype,
#ifdef EXCEPTIONS_ORDER
  ExceptionHandler[?ref, ?heaptype] = ?handler,
#else
  ExceptionHandler(?handler, ?ref, ?heaptype),
#endif
  ExceptionHandler:FormalParam[?handler] = ?param.

VarPointsTo(?hctx, ?heap, ?callerCtx, ?param) <-
#ifdef EXCEPTIONS_CS
  CallGraphEdge(?callerCtx, ?invocation, ?calleeCtx, ?tomethod),
  ThrowPointsTo(?hctx, ?heap, ?calleeCtx, ?tomethod),
#else
  CallGraphEdge(?callerCtx, ?invocation, _, ?tomethod),
  ThrowPointsTo(?hctx, ?heap, ?tomethod),
#endif
  HeapAllocation:Type[?heap] = ?heaptype,
#ifdef EXCEPTIONS_ORDER
  ExceptionHandler[?invocation, ?heaptype] = ?handler,
#else
  ExceptionHandler(?handler, ?invocation, ?heaptype),
#endif
  ExceptionHandler:FormalParam[?handler] = ?param.

#if defined(EXCEPTIONS_FILTER) && !defined(EXCEPTIONS_ORDER)

ExistsExceptionHandler(?ref, ?type) -> InstructionRef(?ref), Type(?type).
ExistsExceptionHandler(?ref, ?type) <-
  ExceptionHandler(_, ?ref, ?type).

#endif

#ifdef EXCEPTIONS_ORDER
#include "experimental-handler-order.logic"
#else
#include "experimental-handler-no-order.logic"
#endif
