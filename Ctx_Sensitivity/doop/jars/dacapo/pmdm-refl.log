Class.forName;dacapo.Benchmark;dacapo.Benchmark.class$;439;;
Class.forName;dacapo.Benchmark;dacapo.TestHarness.class$;60;;
Class.forName;dacapo.TestHarness;dacapo.TestHarness.class$;60;;
Class.forName;dacapo.parser.Config;dacapo.TestHarness.class$;60;;
Class.forName;dacapo.pmd.PmdHarness;dacapo.TestHarness.findClass;414;;
Class.forName;java.io.File;dacapo.TestHarness.class$;60;;
Class.forName;java.lang.String;net.sourceforge.pmd.dfa.report.ReportTree.class$;122;;
Class.forName;java.lang.String;net.sourceforge.pmd.jaxen.AttributeAxisIterator.class$;93;;
Class.forName;java.security.MessageDigestSpi;java.security.Security.getSpiClass;640;;
Class.forName;java.util.CurrencyData;java.util.Currency$1.run;128;;
Class.forName;net.sourceforge.pmd.ast.ASTClassOrInterfaceBodyDeclaration;net.sourceforge.pmd.RuleViolation.class$;74;;
Class.forName;net.sourceforge.pmd.ast.ASTClassOrInterfaceDeclaration;net.sourceforge.pmd.RuleViolation.class$;74;;
Class.forName;net.sourceforge.pmd.ast.ASTClassOrInterfaceDeclaration;net.sourceforge.pmd.ast.ASTMethodDeclaration.class$;32;;
Class.forName;net.sourceforge.pmd.ast.ASTFormalParameter;net.sourceforge.pmd.RuleViolation.class$;74;;
Class.forName;net.sourceforge.pmd.ast.ASTIfStatement;net.sourceforge.pmd.rules.DoubleCheckedLocking.class$;64;;
Class.forName;net.sourceforge.pmd.ast.ASTLocalVariableDeclaration;net.sourceforge.pmd.RuleViolation.class$;74;;
Class.forName;net.sourceforge.pmd.ast.ASTMethodDeclaration;net.sourceforge.pmd.RuleViolation.class$;74;;
Class.forName;net.sourceforge.pmd.ast.ASTMethodDeclarator;net.sourceforge.pmd.rules.UselessOverridingMethod.class$;47;;
Class.forName;net.sourceforge.pmd.ast.ASTMethodDeclarator;net.sourceforge.pmd.symboltable.ScopeAndDeclarationFinder.class$;95;;
Class.forName;net.sourceforge.pmd.ast.ASTPackageDeclaration;net.sourceforge.pmd.symboltable.ScopeAndDeclarationFinder.class$;95;;
Class.forName;net.sourceforge.pmd.ast.ASTPrimaryExpression;net.sourceforge.pmd.rules.DoubleCheckedLocking.class$;64;;
Class.forName;net.sourceforge.pmd.ast.ASTPrimaryExpression;net.sourceforge.pmd.rules.UselessOverridingMethod.class$;47;;
Class.forName;net.sourceforge.pmd.ast.ASTPrimaryPrefix;net.sourceforge.pmd.rules.UselessOverridingMethod.class$;47;;
Class.forName;net.sourceforge.pmd.ast.ASTPrimarySuffix;net.sourceforge.pmd.rules.UselessOverridingMethod.class$;47;;
Class.forName;net.sourceforge.pmd.ast.ASTResultType;net.sourceforge.pmd.ast.ASTMethodDeclaration.class$;32;;
Class.forName;net.sourceforge.pmd.ast.ASTReturnStatement;net.sourceforge.pmd.rules.DoubleCheckedLocking.class$;64;;
Class.forName;net.sourceforge.pmd.ast.ASTStatement;net.sourceforge.pmd.rules.UselessOverridingMethod.class$;47;;
Class.forName;net.sourceforge.pmd.ast.ASTSynchronizedStatement;net.sourceforge.pmd.rules.DoubleCheckedLocking.class$;64;;
Class.forName;net.sourceforge.pmd.ast.ASTTypeDeclaration;net.sourceforge.pmd.RuleViolation.class$;74;;
Class.forName;org.apache.xerces.impl.dv.ObjectFactory;org.apache.xerces.impl.dv.ObjectFactory.class$;;;
Class.forName;org.apache.xerces.parsers.ObjectFactory;org.apache.xerces.parsers.ObjectFactory.class$;;;
Class.forName;org.jaxen.saxpath.XPathReader;org.jaxen.saxpath.helpers.XPathReaderFactory.class$;152;;
Class.forName;org.jaxen.saxpath.base.XPathReader;org.jaxen.saxpath.helpers.XPathReaderFactory.createReader;150;;
Class.forName;org.jaxen.saxpath.helpers.XPathReaderFactory;org.jaxen.saxpath.helpers.XPathReaderFactory.class$;152;;
Class.forName;sun.security.provider.SHA;java.security.Provider$Service.getImplClass;1260;;
Class.newInstance;net.sourceforge.pmd.rules.DoubleCheckedLocking;net.sourceforge.pmd.RuleSetFactory.parseInternallyDefinedRuleNode;309;;
Class.newInstance;net.sourceforge.pmd.rules.UnnecessaryConversionTemporary;net.sourceforge.pmd.RuleSetFactory.parseInternallyDefinedRuleNode;309;;
Class.newInstance;net.sourceforge.pmd.rules.UselessOverridingMethod;net.sourceforge.pmd.RuleSetFactory.parseInternallyDefinedRuleNode;309;;
Class.newInstance;net.sourceforge.pmd.rules.XPathRule;net.sourceforge.pmd.RuleSetFactory.parseInternallyDefinedRuleNode;309;;
Class.newInstance;org.apache.xerces.impl.dv.dtd.DTDDVFactoryImpl;org.apache.xerces.impl.dv.ObjectFactory.newInstance;;;
Class.newInstance;org.apache.xerces.jaxp.DocumentBuilderFactoryImpl;javax.xml.parsers.FactoryFinder.newInstance;155;;
Class.newInstance;org.apache.xerces.parsers.XIncludeAwareParserConfiguration;org.apache.xerces.parsers.ObjectFactory.newInstance;;;
Class.newInstance;org.jaxen.saxpath.base.XPathReader;org.jaxen.saxpath.helpers.XPathReaderFactory.createReader;170;;
Class.newInstance;sun.reflect.GeneratedConstructorAccessor$HASHED$6fa76d2fd361585c5fe3433964828b14710d5895;sun.reflect.MethodAccessorGenerator$1.run;381;;
Class.newInstance;sun.reflect.GeneratedConstructorAccessor$HASHED$bf67be7aa2fba0e0c4125f99f7ac27c22b632870;sun.reflect.MethodAccessorGenerator$1.run;381;;
Class.newInstance;sun.reflect.GeneratedMethodAccessor$HASHED$0fe886932b69b97b98f9625dd69006a3475e7188;sun.reflect.MethodAccessorGenerator$1.run;381;;
Class.newInstance;sun.reflect.GeneratedMethodAccessor$HASHED$121a7f6cb30af9bf05f2a64d37a9ea1013fd5cc0;sun.reflect.MethodAccessorGenerator$1.run;381;;
Class.newInstance;sun.reflect.GeneratedMethodAccessor$HASHED$8dc4c0adca50f3650707e512601212bcb28a5762;sun.reflect.MethodAccessorGenerator$1.run;381;;
Class.newInstance;sun.reflect.GeneratedMethodAccessor$HASHED$c946dd178d154fb119c92b3f26884d763bca6616;sun.reflect.MethodAccessorGenerator$1.run;381;;
Class.newInstance;sun.reflect.GeneratedMethodAccessor$HASHED$cd8720a9876dd45d062642f66ce52e3a5d322735;sun.reflect.MethodAccessorGenerator$1.run;381;;
Class.newInstance;sun.reflect.GeneratedMethodAccessor$HASHED$edc22611611f00c7930464fb47c0667b195ed66f;sun.reflect.MethodAccessorGenerator$1.run;381;;
Class.newInstance;sun.security.provider.SHA;java.security.Provider$Service.newInstance;1221;;
Class.newInstance;sun.security.provider.Sun;sun.security.jca.ProviderConfig$3.run;240;;
Class.newInstance;sun.text.resources.FormatData;java.util.ResourceBundle$Control.newBundle;2295;;
Class.newInstance;sun.text.resources.FormatData_en;java.util.ResourceBundle$Control.newBundle;2295;;
Class.newInstance;sun.text.resources.FormatData_en_US;java.util.ResourceBundle$Control.newBundle;2295;;
Class.newInstance;sun.util.resources.CurrencyNames;java.util.ResourceBundle$Control.newBundle;2295;;
Class.newInstance;sun.util.resources.CurrencyNames_en_US;java.util.ResourceBundle$Control.newBundle;2295;;
Constructor.newInstance;<dacapo.pmd.PmdHarness: void <init>(dacapo.parser.Config,java.io.File)>;dacapo.TestHarness.runBenchmark;270;isAccessible=false;
Constructor.newInstance;<net.sourceforge.pmd.rules.DoubleCheckedLocking: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.rules.UnnecessaryConversionTemporary: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.rules.UselessOverridingMethod: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.rules.XPathRule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<org.apache.xerces.impl.dv.dtd.DTDDVFactoryImpl: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<org.apache.xerces.jaxp.DocumentBuilderFactoryImpl: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<org.apache.xerces.parsers.XIncludeAwareParserConfiguration: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<org.jaxen.saxpath.base.XPathReader: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.reflect.GeneratedConstructorAccessor$HASHED$6fa76d2fd361585c5fe3433964828b14710d5895: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.reflect.GeneratedConstructorAccessor$HASHED$bf67be7aa2fba0e0c4125f99f7ac27c22b632870: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.reflect.GeneratedMethodAccessor$HASHED$0fe886932b69b97b98f9625dd69006a3475e7188: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.reflect.GeneratedMethodAccessor$HASHED$121a7f6cb30af9bf05f2a64d37a9ea1013fd5cc0: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.reflect.GeneratedMethodAccessor$HASHED$8dc4c0adca50f3650707e512601212bcb28a5762: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.reflect.GeneratedMethodAccessor$HASHED$c946dd178d154fb119c92b3f26884d763bca6616: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.reflect.GeneratedMethodAccessor$HASHED$cd8720a9876dd45d062642f66ce52e3a5d322735: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.reflect.GeneratedMethodAccessor$HASHED$edc22611611f00c7930464fb47c0667b195ed66f: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.security.provider.SHA: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.security.provider.Sun: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.text.resources.FormatData: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.text.resources.FormatData_en: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.text.resources.FormatData_en_US: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.util.resources.CurrencyNames: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.util.resources.CurrencyNames_en_US: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Field.get*;<java.util.CurrencyData: int[] otherCurrenciesDFD>;java.util.Currency$1.run;136;isAccessible=false;
Field.get*;<java.util.CurrencyData: int[] scNewCurrenciesDFD>;java.util.Currency$1.run;134;isAccessible=false;
Field.get*;<java.util.CurrencyData: int[] scOldCurrenciesDFD>;java.util.Currency$1.run;133;isAccessible=false;
Field.get*;<java.util.CurrencyData: java.lang.String mainTable>;java.util.Currency$1.run;129;isAccessible=false;
Field.get*;<java.util.CurrencyData: java.lang.String otherCurrencies>;java.util.Currency$1.run;135;isAccessible=false;
Field.get*;<java.util.CurrencyData: java.lang.String[] scNewCurrencies>;java.util.Currency$1.run;132;isAccessible=false;
Field.get*;<java.util.CurrencyData: java.lang.String[] scOldCurrencies>;java.util.Currency$1.run;131;isAccessible=false;
Field.get*;<java.util.CurrencyData: long[] scCutOverTimes>;java.util.Currency$1.run;130;isAccessible=false;
Method.invoke;<java.lang.String: java.lang.String[] split(java.lang.String)>;net.sourceforge.pmd.dfa.report.ReportTree.addRuleViolation;125;isAccessible=false;
Method.invoke;<net.sourceforge.pmd.ast.ASTClassOrInterfaceDeclaration: boolean isInterface()>;net.sourceforge.pmd.jaxen.Attribute.getValue;30;isAccessible=false;
Method.invoke;<net.sourceforge.pmd.ast.ASTIfStatement: boolean hasElse()>;net.sourceforge.pmd.jaxen.Attribute.getValue;30;isAccessible=false;
Method.invoke;<net.sourceforge.pmd.ast.ASTInitializer: boolean isStatic()>;net.sourceforge.pmd.jaxen.Attribute.getValue;30;isAccessible=false;
Method.invoke;<net.sourceforge.pmd.ast.ASTResultType: boolean isVoid()>;net.sourceforge.pmd.jaxen.Attribute.getValue;30;isAccessible=false;
Method.invoke;<net.sourceforge.pmd.ast.AccessNode: boolean isFinal()>;net.sourceforge.pmd.jaxen.Attribute.getValue;30;isAccessible=false;
Method.invoke;<net.sourceforge.pmd.ast.SimpleNode: java.lang.String getImage()>;net.sourceforge.pmd.jaxen.Attribute.getValue;30;isAccessible=false;
