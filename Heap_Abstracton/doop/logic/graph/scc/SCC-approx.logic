
/* SCC Representative */

_InSameSCC(?n1, ?n2) -> Graph:Node(?n1), Graph:Node(?n2).
_Cyclic(?n) -> Graph:Node(?n).

_SCCRepresentativeOf[?n1] = m <- 
	agg<<m = min(?n2)>>(_InSameSCC(?n1, ?n2)).

/* Edge and Path between SCCs  */

_EdgeBetweenSCCs(?from, ?to) <-
    _SCCRepresentativeOf[?n1] = ?from,
    _SCCRepresentativeOf[?n2] = ?to,
    ?from != ?to,
    Graph:Edge(?n1,?n2).

_PathBetweenSCCs(?from, ?to) <- 
    _EdgeBetweenSCCs(?from, ?to).

_PathBetweenSCCs(?from, ?to) <- 
    _EdgeBetweenSCCs(?from, ?interm),
    ?from != ?to,
    _PathBetweenSCCs(?interm, ?to).


/* Path definition using underapproximate SCCs */

// should change name to Graph:Path eventually

Graph:MyPath(?n1, ?n2) -> Graph:Node(?n1), Graph:Node(?n2).

lang:derivationType[`Graph:MyPath] = "Derived".

Graph:MyPath(?n1, ?n2) <-
	?n1 != ?n2,
	_SCCRepresentativeOf[?n1] = _SCCRepresentativeOf[?n2].

Graph:MyPath(?n, ?n) <-
	_Cyclic(?n).

Graph:MyPath(?n1, ?n2) <-
	_SCCRepresentativeOf[?n1] != _SCCRepresentativeOf[?n2],
	_PathBetweenSCCs(
		_SCCRepresentativeOf[?n1], 
		_SCCRepresentativeOf[?n2]
	).


/* Maximal SCC */


lang:derivationType[`Graph:InSameSCC] = "Derived".

Graph:InSameSCC(?n1, ?n2) <- 
	Graph:MyPath(?n1, ?n2),
	Graph:MyPath(?n2, ?n1).

Graph:InSameSCC(?n, ?n) <-
	Graph:Node(?n). 

