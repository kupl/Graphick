
/* Spanning Walks */

_MinValueWalk[?n] = m <- agg<<m = min(?n2)>>(Graph:Edge(?n,?n2)).
_MaxValueWalk[?n] = m <- agg<<m = max(?n2)>>(Graph:Edge(?n,?n2)).
_MinValueBackWalk[?n] = m <- agg<<m = min(?n2)>>(Graph:Edge(?n2,?n)).
_MaxValueBackWalk[?n] = m <- agg<<m = max(?n2)>>(Graph:Edge(?n2,?n)).

/* Subgraphs */

_Edge2(?n1,?n2) <- _MaxValueWalk[?n1] = ?n2.
_Edge2(?n1,?n2) <- _MaxValueBackWalk[?n2] = ?n1.

_Edge3(?n1,?n2) <- _MinValueWalk[?n1] = ?n2.
_Edge3(?n1,?n2) <- _MinValueBackWalk[?n2] = ?n1.


/* Transitive Edges of subgraphs */

_Path2(?from,?to) <- _Edge2(?from,?to).
_Path2(?from,?to) <- _Edge2(?from,?interm), _Path2(?interm,?to).

_Path3(?from,?to) <- _Edge3(?from,?to).
_Path3(?from,?to) <- _Edge3(?from,?interm), _Path3(?interm,?to).


/* Cycle Detection */

_InSameSCC2(?n1,?n2) <- _Path2(?n1,?n2), Graph:Edge(?n2,?n1). 
_InSameSCC2(?n1,?n2) <- _Path2(?n1,?n2), Graph:Edge(?n2,?n3), _Path2(?n3,?n1).

_InSameSCC3(?n1,?n2) <- _Path3(?n1,?n2), Graph:Edge(?n2,?n1). 
_InSameSCC3(?n1,?n2) <- _Path3(?n1,?n2), Graph:Edge(?n2,?n3), _Path3(?n3,?n1).


/* Symmetric Closure */

_InSameSCC2(?n1,?n2) <- _InSameSCC2(?n2,?n1).
_InSameSCC3(?n1,?n2) <- _InSameSCC3(?n2,?n1).


/* Underapproximate SCC */

$SCC_approx:_InSameSCC(?n1,?n1) <- Graph:Node(?n1). 
$SCC_approx:_InSameSCC(?n1,?n2) <- _InSameSCC3(?n1, ?n2).
$SCC_approx:_InSameSCC(?n1,?n2) <- _InSameSCC3(?n1, ?nInterm), 
	$SCC_approx:_InSameSCC(?nInterm, ?n2).

$SCC_approx:_InSameSCC(?n1,?n2) <- _InSameSCC2(?n1, ?n2).
$SCC_approx:_InSameSCC(?n1,?n2) <- _InSameSCC2(?n1, ?nInterm), 
	$SCC_approx:_InSameSCC(?nInterm, ?n2).

$SCC_approx:_Cyclic(?n) <- _InSameSCC3(?n, ?n).
$SCC_approx:_Cyclic(?n) <- _InSameSCC3(?n, ?nInterm), 
	$SCC_approx:_InSameSCC(?nInterm, ?n).

$SCC_approx:_Cyclic(?n) <- _InSameSCC2(?n, ?n).
$SCC_approx:_Cyclic(?n) <- _InSameSCC2(?n, ?nInterm), 
	$SCC_approx:_InSameSCC(?nInterm, ?n).

