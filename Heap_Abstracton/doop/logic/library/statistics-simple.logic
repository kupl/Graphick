/***************************************************
 * Variables
 ***************************************************/

Stats:Simple:InsensVarPointsTo(?heap, ?var) ->
  HeapAllocationRef(?heap), VarRef(?var).
Stats:Simple:InsensVarPointsTo(?heap, ?var) <-
  VarPointsTo(_, ?heap, _, ?var).

Stats:Simple:InsensReachableVar(?var) -> VarRef(?var).
Stats:Simple:ReachableVar(?ctx, ?var) -> Context(?ctx), VarRef(?var).

Stats:Simple:InsensReachableVar(?var),
Stats:Simple:ReachableVar(?ctx, ?var) <-
  ReachableContext(?ctx, ?method), Var:DeclaringMethod(?var, ?method).

/***************************************************
 * Arrays
 ***************************************************/

Stats:Simple:InsensArrayIndexPointsTo(?heap, ?baseheap) ->
  HeapAllocationRef(?heap), HeapAllocationRef(?baseheap).
Stats:Simple:InsensArrayIndexPointsTo(?heap, ?baseheap) <-
  ArrayIndexPointsTo(_, ?heap, _, ?baseheap).

/***************************************************
 * Fields
 ***************************************************/

Stats:Simple:InsensInstanceFieldPointsTo(?heap, ?sig, ?baseheap) ->
  HeapAllocationRef(?heap), FieldSignatureRef(?sig), HeapAllocationRef(?baseheap).
Stats:Simple:InsensInstanceFieldPointsTo(?heap, ?sig, ?baseheap) <-
  InstanceFieldPointsTo(_, ?heap, ?sig, _, ?baseheap).

Stats:Simple:InsensStaticFieldPointsTo(?heap, ?sig) ->
  HeapAllocationRef(?heap), FieldSignatureRef(?sig).
Stats:Simple:InsensStaticFieldPointsTo(?heap, ?sig) <-
  StaticFieldPointsTo(_, ?heap, ?sig).

/***************************************************
 * Call graph edges
 ***************************************************/

Stats:Simple:InsensCallGraphEdge(?from, ?to) ->
  CallGraphEdgeSourceRef(?from), MethodSignatureRef(?to).
Stats:Simple:InsensCallGraphEdge(?from, ?to) <-
  CallGraphEdge(_, ?from, _, ?to).

/*
Stats:Simple:InsensNativeCallGraphEdge(?from, ?to) ->
  MethodSignatureRef(?from), MethodSignatureRef(?to).
Stats:Simple:InsensNativeCallGraphEdge(?from, ?to) <-
  NativeCallGraphEdge(_, ?from, _, ?to).
*/

Stats:Simple:VirtualCallGraphEdge(?from, ?to) -> MethodInvocationRef(?from),  MethodSignatureRef(?to).
Stats:Simple:VirtualCallGraphEdge(?from, ?to) <-
	Stats:Simple:ReachableVirtualMethodInvocation(?from),
	Stats:Simple:InsensCallGraphEdge(?from, ?to).

Stats:Simple:AllCallGraphEdge(?from, ?to) ->
  CallGraphEdgeSourceRef(?from), MethodSignatureRef(?to).
Stats:Simple:AllCallGraphEdge(?from, ?to) <-
  Stats:Simple:InsensCallGraphEdge(?from, ?to).
Stats:Simple:AllCallGraphEdge(?from, ?to) <-
  InsensReflectiveCallGraphEdge(?from, ?to).

	
/***************************************************
 * Application methods
 ***************************************************/

Stats:Simple:ApplicationMethod(?method) -> MethodSignatureRef(?method).
Stats:Simple:ApplicationMethod(?method) <-
	ApplicationClass(?class),
	DeclaringClassMethod[?method] = ?class.

/*
Stats:Simple:ApplicationMethodNotAbstract(?method) -> MethodSignatureRef(?method).
Stats:Simple:ApplicationMethodNotAbstract(?method) <-
	Stats:Simple:ApplicationMethod(?method),
	! MethodModifier(?abstract, ?method),
	ModifierRef:Value(?abstract:"abstract").
*/

Stats:Simple:InsensReachableApplicationMethod(?method) -> MethodSignatureRef(?method).
Stats:Simple:ReachableApplicationMethod(?ctx, ?method) -> Context(?ctx), MethodSignatureRef(?method).

Stats:Simple:InsensReachableApplicationMethod(?method),
Stats:Simple:ReachableApplicationMethod(?ctx, ?method) <-
	ReachableContext(?ctx, ?method),
	Stats:Simple:ApplicationMethod(?method).

/*
Stats:Simple:NotReachableApplicationMethodNotAbstract(?method) -> MethodSignatureRef(?method).
Stats:Simple:NotReachableApplicationMethodNotAbstract(?method) <-
	Stats:Simple:ApplicationMethodNotAbstract(?method),
	! Stats:Simple:InsensReachableApplicationMethod(?method).
*/

/***************************************************
 * Virtual method invocations
 ***************************************************/

Stats:Simple:VirtualTargets[?from] = ?size -> MethodInvocationRef(?from), int[64](?size).
Stats:Simple:VirtualTargets[?from] = size <-
	agg<<size = count()>>(Stats:Simple:VirtualCallGraphEdge(?from, _)).

/*
Stats:Simple:Application:VirtualTargets[?from] = ?size -> MethodInvocationRef(?from), int[64](?size).
Stats:Simple:Application:VirtualTargets[?from] = ?size <-
	Stats:Simple:VirtualTargets[?from] = ?size,
	Stats:Simple:Application:ReachableVirtualMethodInvocation(?from).
*/

Stats:Simple:PolymorphicCallSite(?from) -> MethodInvocationRef(?from).
Stats:Simple:PolymorphicCallSite(?from) <-
	Stats:Simple:VirtualTargets[?from] = ?size, ?size > 1.

Stats:Simple:Application:PolymorphicCallSite(?from) -> MethodInvocationRef(?from).
Stats:Simple:Application:PolymorphicCallSite(?from) <-
	Stats:Simple:PolymorphicCallSite(?from),
	Stats:Simple:Application:ReachableVirtualMethodInvocation(?from).

Stats:Simple:ReachableVirtualMethodInvocation(?invocation) -> MethodInvocationRef(?invocation).
Stats:Simple:ReachableVirtualMethodInvocation(?invocation) <-
	Reachable(?method),
	VirtualMethodInvocation:In(?invocation, ?method).

Stats:Simple:Application:ReachableVirtualMethodInvocation(?invocation) -> MethodInvocationRef(?invocation).
Stats:Simple:Application:ReachableVirtualMethodInvocation(?invocation) <-
	Stats:Simple:InsensReachableApplicationMethod(?method),
	VirtualMethodInvocation:In(?invocation, ?method).

Stats:Simple:Application:VirtualMethodInvocation(?invocation) -> MethodInvocationRef(?invocation).
Stats:Simple:Application:VirtualMethodInvocation(?invocation) <-
	Stats:Simple:ApplicationMethod(?method),
	VirtualMethodInvocation:In(?invocation, ?method).

Stats:Simple:NullVirtualMethodInvocation(?invocation) -> MethodInvocationRef(?invocation).
Stats:Simple:NullVirtualMethodInvocation(?invocation) <-
	Stats:Simple:ReachableVirtualMethodInvocation(?invocation),
	VirtualMethodInvocation:Base[?invocation] = ?base,
	!(Stats:Simple:InsensVarPointsTo(_, ?base)).

Stats:Simple:Application:NullVirtualMethodInvocation(?invocation) -> MethodInvocationRef(?invocation).
Stats:Simple:Application:NullVirtualMethodInvocation(?invocation) <-
	Stats:Simple:Application:ReachableVirtualMethodInvocation(?invocation),
	VirtualMethodInvocation:Base[?invocation] = ?base,
	!(Stats:Simple:InsensVarPointsTo(_, ?base)).

/***************************************************
 * Casts
 ***************************************************/

Stats:Simple:Application:Cast(?type, ?from, ?to, ?inmethod) <-
	AssignCast(?type, ?from, ?to, ?inmethod), Stats:Simple:ApplicationMethod(?inmethod).

Stats:Simple:PotentiallyFailingCast(?type, ?from, ?to) -> Type(?type), VarRef(?to), VarRef(?from).
Stats:Simple:PotentiallyFailingCast(?type, ?from, ?to) <-
	Stats:Simple:ReachableCast(_, ?type, ?to, ?from),
	Stats:Simple:InsensVarPointsTo(?heap, ?from),
	HeapAllocation:Type[?heap] = ?heaptype,
	! AssignCompatible(?type, ?heaptype).

Stats:Simple:Application:PotentiallyFailingCast(?type, ?from, ?to) -> Type(?type), VarRef(?to), VarRef(?from).
Stats:Simple:Application:PotentiallyFailingCast(?type, ?from, ?to) <-
	Stats:Simple:Application:ReachableCast(_, ?type, ?to, ?from),
	Stats:Simple:InsensVarPointsTo(?heap, ?from),
	HeapAllocation:Type[?heap] = ?heaptype,
	! AssignCompatible(?type, ?heaptype).

// TODO introduce an ID for casts.
Stats:Simple:ReachableCast(?inmethod, ?type, ?to, ?from) -> 
	Type(?type), VarRef(?to), VarRef(?from), MethodSignatureRef(?inmethod).
Stats:Simple:ReachableCast(?inmethod, ?type, ?to, ?from) <-
	Reachable(?inmethod), AssignCast(?type, ?from, ?to, ?inmethod).

Stats:Simple:Application:ReachableCast(?inmethod, ?type, ?to, ?from) -> 
	Type(?type), VarRef(?to), VarRef(?from), MethodSignatureRef(?inmethod).
Stats:Simple:Application:ReachableCast(?inmethod, ?type, ?to, ?from) <-
	Stats:Simple:ApplicationMethod(?inmethod),
	Stats:Simple:ReachableCast(?inmethod, ?type, ?to, ?from).

/*************************************************************
 *               Reflection result statistics                *
 *************************************************************/
// reflective call graph edges
InsensReflectiveCallGraphEdge(?caller, ?callee) <-
  ReflectiveCallGraphEdge(_, ?caller, _, ?callee).

// clz/ctor.newInstance
ReachableClassNewInstance(?invo) <-
  java:lang:Class:newInstance(?invo, _, _),
  Reachable(?inmethod),
  VirtualMethodInvocation:In(?invo, ?inmethod).

ReachableConstructorNewInstance(?invo) <-
  java:lang:reflect:Constructor:newInstance(?invo, _, _),
  Reachable(?inmethod),
  VirtualMethodInvocation:In(?invo, ?inmethod).

ReachableNewInstance(?invo) <-
  ReachableClassNewInstance(?invo);
  ReachableConstructorNewInstance(?invo).

NewInstanceResults(?invo, ?type) <-
  ReflectiveAssignHeapAllocation(?invo, ?type, _, _).

ResolvedNewInstance(?invo) <-
  NewInstanceResults(?invo, _).

ClassNewInstanceResults(?invo, ?type) <-
  NewInstanceResults(?invo, ?type),
  java:lang:Class:newInstance(?invo, _, _).

ResolvedClassNewInstance(?invo) <-
  ClassNewInstanceResults(?invo, _).

ConstructorNewInstanceResults(?invo, ?ctor) <-
  ReflectiveCallGraphEdge(_, ?invo, _, ?ctor),
  java:lang:reflect:Constructor:newInstance(?invo, _, _).

ResolvedConstructorNewInstance(?invo) <-
  ConstructorNewInstanceResults(?invo, _).


// mtd.invoke
ReachableInvoke(?invo) <-
  java:lang:reflect:Method:invoke(?invo, _),
  Reachable(?inmethod),
  VirtualMethodInvocation:In(?invo, ?inmethod).
  
InvokeResults(?invo, ?method) <-
  ReflectiveCallGraphEdge(_, ?invo, _, ?method),
  java:lang:reflect:Method:invoke(?invo, _).

ResolvedInvoke(?invo) <-
  InvokeResults(?invo, _).

// fld.get/set
ReachableFieldGet(?invo) <-
  java:lang:reflect:Field:get(?invo, _, _),
  Reachable(?inmethod),
  VirtualMethodInvocation:In(?invo, ?inmethod).

FieldGetResults(?invo, ?field) <-
  ReflectiveLoadField(?invo, _, _, ?field),
  ModifierRef:Value(?static:"static"),
  FieldModifier(?static, ?field).

FieldGetResults(?invo, ?field) <-
  ReflectiveLoadField(?invo, _, _, ?field),
  ModifierRef:Value(?static:"static"),
  ! FieldModifier(?static, ?field),
  java:lang:reflect:Field:get:base[?invo] = _.

ResolvedFieldGet(?invo) <-
  FieldGetResults(?invo, _).

ReachableFieldSet(?invo) <-
  java:lang:reflect:Field:set(?invo, _),
  Reachable(?inmethod),
  VirtualMethodInvocation:In(?invo, ?inmethod).

FieldSetResults(?invo, ?field) <-
  ReflectiveStoreField(?invo, ?field, _, _),
  ModifierRef:Value(?static:"static"),
  FieldModifier(?static, ?field).

FieldSetResults(?invo, ?field) <-
  ReflectiveStoreField(?invo, ?field, _, _),
  ModifierRef:Value(?static:"static"),
  ! FieldModifier(?static, ?field),
  java:lang:reflect:Field:set:base[?invo] = _.

ResolvedFieldSet(?invo) <-
  FieldSetResults(?invo, _).


ReachableHeap(?heap) <-
  Stats:Simple:InsensVarPointsTo(?heap, _).  
  
ReachableHeapAllocation:Type[?heap] = ?type<-
  HeapAllocation:Type[?heap] = ?type,
  ReachableHeap(?heap).

ReachableType(?type),
ReachableHeapToType[?obj]=?type <- 
  HeapAllocation:Type[?obj]=?type, 
  ReachableHeap(?obj).

HeapMethodType(?heap, ?type)<-
  MethodSignature:Type[?inmethod] = ?type,
  ReachableHeap(?heap),
  AssignHeapAllocation(?heap, _, ?inmethod).

HeapMethodModifier(?heap, ?mod)<-
  MethodModifier(?mod, ?inmethod),
  ReachableHeap(?heap),
  AssignHeapAllocation(?heap, _, ?inmethod).


Edges[] = ?n <-
  agg<<?n = count()>> FPG(_, _).

FPG(?baseheap,?heap) <-   
  Stats:Simple:InsensInstanceFieldPointsTo(?heap, _, ?baseheap). 

FPG(?baseheap,?heap) <-
  Stats:Simple:InsensArrayIndexPointsTo(?heap, ?baseheap). 

OutgoingFPGEdges[?fromHeap] = ?n <-
  agg<<?n = count()>> FPG(?fromHeap, _).  


IncomingFPGEdges[?toHeap] = ?n <-
  agg<<?n = count()>> FPG(_, ?toHeap).


OutgoingOAGEdges[?fromHeap] = ?n <-
  agg<<?n = count()>> OAG(?fromHeap, _).  




IncomingOAGEdges[?toHeap] = ?n <-
  ReachableHeap(?toHeap),
  RIncomingOAGEdges[?toHeap] = ?n.

RIncomingOAGEdges[?toHeap] = ?n <-
  agg<<?n = count()>> OAG(_, ?toHeap).



Invocation:In[?invocation] = ?inmethod <-
  SpecialMethodInvocation:In(?invocation, ?inmethod).

Invocation:In[?invocation] = ?inmethod <-
  VirtualMethodInvocation:In(?invocation, ?inmethod).

Invocation:In[?invocation] = ?inmethod <-
  StaticMethodInvocation:In(?invocation, ?inmethod).

StaticMethod(?meth) <-
  StaticMethodInvocation:Signature[_] = ?meth.


StaticToStatic(?inmeth, ?tometh) <-
  StaticMethod(?inmeth),
  StaticMethodInvocation:Signature[?invo] = ?tometh,
  StaticMethodInvocation:In(?invo, ?inmeth).

NonStaticToStatic(?fromMethod,?tomethod) <-
  !StaticMethod(?fromMethod),
  StaticMethodInvocation:In(?invocation, ?fromMethod),
  StaticMethodInvocation:Signature[?invocation] = ?tomethod.


NonStaticToStatic(?fromMethod,?tomethod2) <-
  StaticToStatic(?tomethod,?tomethod2),
  NonStaticToStatic(?fromMethod,?tomethod).


OAG(?fromHeap,?toHeap) <-
  Stats:Simple:InsensVarPointsTo(?fromHeap, ?var),
  NonStaticToStatic(?fromMethod,?inmethod),
  StaticMethod(?inmethod),
  ThisVar[?fromMethod] = ?var,
  AssignHeapAllocation(?toHeap, _, ?inmethod).


OAG(?fromHeap,?toHeap) <-
  Stats:Simple:InsensVarPointsTo(?fromHeap, ?var),
  !StaticMethod(?inmethod),
  ThisVar[?inmethod] = ?var,
  AssignHeapAllocation(?toHeap, _, ?inmethod).



///////////////////////////////////////////////////////////////Feature

//FieldSignature(?ref, ?declaringClass, _, ?type) ->

//PrimitiveType(?x) -> Type(?x).


HeapFieldElse(?heap,?ref)<-
  !PrimitiveType(?type),
  FieldSignature(?ref, ?declaringClass, _, ?type),
  ReachableHeap(?heap),
  HeapAllocation:Type[?heap] = ?declaringClass.

HeapElseCnt[?heap] = ?n <-
  agg<<?n = count()>> HeapFieldElse(?heap, _).  


HeapFieldBoolean(?heap,?ref)<-
  string:like(?type,"%boolean%"),
  PrimitiveType(?type),
  FieldSignature(?ref, ?declaringClass, _, ?type),
  ReachableHeap(?heap),
  HeapAllocation:Type[?heap] = ?declaringClass.

HeapBooleanCnt[?heap] = ?n <-
  agg<<?n = count()>> HeapFieldBoolean(?heap, _).  


HeapFieldByte(?heap,?ref)<-
  string:like(?type,"%byte%"),
  PrimitiveType(?type),
  FieldSignature(?ref, ?declaringClass, _, ?type),
  ReachableHeap(?heap),
  HeapAllocation:Type[?heap] = ?declaringClass.

HeapByteCnt[?heap] = ?n <-
  agg<<?n = count()>> HeapFieldByte(?heap, _).  


HeapFieldChar(?heap,?ref)<-
  string:like(?type,"%char%"),
  PrimitiveType(?type),
  FieldSignature(?ref, ?declaringClass, _, ?type),
  ReachableHeap(?heap),
  HeapAllocation:Type[?heap] = ?declaringClass.

HeapCharCnt[?heap] = ?n <-
  agg<<?n = count()>> HeapFieldChar(?heap, _).  

HeapFieldShort(?heap,?ref)<-
  string:like(?type,"%short%"),
  PrimitiveType(?type),
  FieldSignature(?ref, ?declaringClass, _, ?type),
  ReachableHeap(?heap),
  HeapAllocation:Type[?heap] = ?declaringClass.

HeapShortCnt[?heap] = ?n <-
  agg<<?n = count()>> HeapFieldShort(?heap, _).  

HeapFieldInt(?heap,?ref)<-
  string:like(?type,"%int%"),
  PrimitiveType(?type),
  FieldSignature(?ref, ?declaringClass, _, ?type),
  ReachableHeap(?heap),
  HeapAllocation:Type[?heap] = ?declaringClass.

HeapIntCnt[?heap] = ?n <-
  agg<<?n = count()>> HeapFieldInt(?heap, _).  

HeapFieldLong(?heap,?ref)<-
  string:like(?type,"%long%"),
  PrimitiveType(?type),
  FieldSignature(?ref, ?declaringClass, _, ?type),
  ReachableHeap(?heap),
  HeapAllocation:Type[?heap] = ?declaringClass.

HeapLongCnt[?heap] = ?n <-
  agg<<?n = count()>> HeapFieldLong(?heap, _).  

HeapFieldFloat(?heap,?ref)<-
  string:like(?type,"%float%"),
  PrimitiveType(?type),
  FieldSignature(?ref, ?declaringClass, _, ?type),
  ReachableHeap(?heap),
  HeapAllocation:Type[?heap] = ?declaringClass.

HeapFloatCnt[?heap] = ?n <-
  agg<<?n = count()>> HeapFieldFloat(?heap, _).  


HeapFieldDouble(?heap,?ref)<-
  string:like(?type,"%double%"),
  PrimitiveType(?type),
  FieldSignature(?ref, ?declaringClass, _, ?type),
  ReachableHeap(?heap),
  HeapAllocation:Type[?heap] = ?declaringClass.

HeapDoubleCnt[?heap] = ?n <-
  agg<<?n = count()>> HeapFieldDouble(?heap, _).  

/*
boolean
byte
char
short
int
long
float
double
*/















