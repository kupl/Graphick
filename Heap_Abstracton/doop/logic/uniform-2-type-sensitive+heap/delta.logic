#include "macros.logic"
#include "../library/common-delta.logic"

/**
 * Special calling contexts
 *
 * Note: the type is necessary (java.lang.String), but never used. It
 * could be anything. It also needs to be an existing type, otherwise
 * the sanity checks will barf.
 */
+InstructionRef(?ctx), +InstructionRef:Value(?ctx, "<<initial-context>>").
+InstructionRef(?ctx), +InstructionRef:Value(?ctx, "<<jvm-startup>>").
+InstructionRef(?ctx), +InstructionRef:Value(?ctx, "<<class-initialization>>").
+InstructionRef(?ctx), +InstructionRef:Value(?ctx, "<<immutable>>").

PlusMethodInvocationRef(?ctx, "<<initial-context2>>").
PlusMethodInvocationRef(?ctx, "<<jvm-startup2>>").
PlusMethodInvocationRef(?ctx, "<<class-initialization2>>").
PlusMethodInvocationRef(?ctx, "<<immutable2>>").


/**
 * Special objects
 */
+MySystemThreadGroup(?ctx, ?alloc),
  +InstructionRef(?ctx), +InstructionRef:Value(?ctx, "<<jvm-startup>>"),
  PlusHeapAllocationRef(?alloc, "<<system-thread-group>>", "java.lang.ThreadGroup").

+MyMainThreadGroup(?ctx, ?alloc),
  +InstructionRef(?ctx), +InstructionRef:Value(?ctx, "<<jvm-startup>>"),
  PlusHeapAllocationRef(?alloc, "<<main-thread-group>>", "java.lang.ThreadGroup").

+MyMainThread(?ctx, ?alloc),
  +InstructionRef(?ctx), +InstructionRef:Value(?ctx, "<<jvm-startup>>"),
  PlusHeapAllocationRef(?alloc, "<<main-thread>>", "java.lang.Thread").
