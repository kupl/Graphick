Class.forName;com.werken.saxpath.XPathReader;org.saxpath.helpers.XPathReaderFactory.createReader;103;;
Class.forName;edu.umd.cs.findbugs.AbstractBugReporter;edu.umd.cs.findbugs.AbstractBugReporter.class$;41;;
Class.forName;edu.umd.cs.findbugs.BugReporter;edu.umd.cs.findbugs.DetectorFactory.class$;41;;
Class.forName;edu.umd.cs.findbugs.Detector2;edu.umd.cs.findbugs.DetectorFactory.class$;41;;
Class.forName;edu.umd.cs.findbugs.Detector2;edu.umd.cs.findbugs.PluginLoader.class$;129;;
Class.forName;edu.umd.cs.findbugs.Detector;edu.umd.cs.findbugs.DetectorFactory.class$;41;;
Class.forName;edu.umd.cs.findbugs.Detector;edu.umd.cs.findbugs.PluginLoader.class$;129;;
Class.forName;edu.umd.cs.findbugs.FieldAnnotation;edu.umd.cs.findbugs.FieldAnnotation.class$;51;;
Class.forName;edu.umd.cs.findbugs.MethodAnnotation;edu.umd.cs.findbugs.MethodAnnotation.class$;45;;
Class.forName;edu.umd.cs.findbugs.NonReportingDetector;edu.umd.cs.findbugs.DetectorFactory.class$;41;;
Class.forName;edu.umd.cs.findbugs.NonReportingDetector;edu.umd.cs.findbugs.FindBugs.class$;978;;
Class.forName;edu.umd.cs.findbugs.SystemProperties;edu.umd.cs.findbugs.SystemProperties.class$;25;;
Class.forName;edu.umd.cs.findbugs.TrainingDetector;edu.umd.cs.findbugs.DetectorFactory.class$;41;;
Class.forName;edu.umd.cs.findbugs.TrainingDetector;edu.umd.cs.findbugs.FindBugs.class$;978;;
Class.forName;edu.umd.cs.findbugs.ba.AbstractBlockOrder;edu.umd.cs.findbugs.ba.AbstractBlockOrder.class$;35;;
Class.forName;edu.umd.cs.findbugs.ba.AbstractClassMember;edu.umd.cs.findbugs.ba.AbstractClassMember.class$;23;;
Class.forName;edu.umd.cs.findbugs.ba.AnalysisContext;edu.umd.cs.findbugs.DetectorFactory.class$;41;;
Class.forName;edu.umd.cs.findbugs.ba.AnnotationRetentionDatabase;edu.umd.cs.findbugs.classfile.engine.bcel.EngineRegistrar.class$;60;;
Class.forName;edu.umd.cs.findbugs.ba.BytecodeScanner;edu.umd.cs.findbugs.ba.BytecodeScanner.class$;31;;
Class.forName;edu.umd.cs.findbugs.ba.CheckReturnAnnotationDatabase;edu.umd.cs.findbugs.ba.AnalysisCacheToAnalysisContextAdapter.class$;139;;
Class.forName;edu.umd.cs.findbugs.ba.CheckReturnAnnotationDatabase;edu.umd.cs.findbugs.classfile.engine.bcel.EngineRegistrar.class$;60;;
Class.forName;edu.umd.cs.findbugs.ba.ClassContext;edu.umd.cs.findbugs.DetectorToDetector2Adapter.class$;63;;
Class.forName;edu.umd.cs.findbugs.ba.ClassContext;edu.umd.cs.findbugs.ba.AnalysisCacheToAnalysisContextAdapter.class$;139;;
Class.forName;edu.umd.cs.findbugs.ba.ClassContext;edu.umd.cs.findbugs.ba.ClassContext.class$;98;;
Class.forName;edu.umd.cs.findbugs.ba.ClassContext;edu.umd.cs.findbugs.classfile.engine.bcel.ClassContextClassAnalysisEngine.class$;48;;
Class.forName;edu.umd.cs.findbugs.ba.Dataflow;edu.umd.cs.findbugs.ba.Dataflow.class$;49;;
Class.forName;edu.umd.cs.findbugs.ba.Frame;edu.umd.cs.findbugs.ba.Frame.class$;62;;
Class.forName;edu.umd.cs.findbugs.ba.InnerClassAccessMap;edu.umd.cs.findbugs.ba.AnalysisCacheToAnalysisContextAdapter.class$;139;;
Class.forName;edu.umd.cs.findbugs.ba.InnerClassAccessMap;edu.umd.cs.findbugs.classfile.engine.bcel.EngineRegistrar.class$;60;;
Class.forName;edu.umd.cs.findbugs.ba.JCIPAnnotationDatabase;edu.umd.cs.findbugs.ba.AnalysisCacheToAnalysisContextAdapter.class$;139;;
Class.forName;edu.umd.cs.findbugs.ba.JCIPAnnotationDatabase;edu.umd.cs.findbugs.ba.JCIPAnnotationDatabase.class$;25;;
Class.forName;edu.umd.cs.findbugs.ba.JCIPAnnotationDatabase;edu.umd.cs.findbugs.classfile.engine.bcel.EngineRegistrar.class$;60;;
Class.forName;edu.umd.cs.findbugs.ba.NullnessAnnotationDatabase;edu.umd.cs.findbugs.ba.AnalysisCacheToAnalysisContextAdapter.class$;139;;
Class.forName;edu.umd.cs.findbugs.ba.NullnessAnnotationDatabase;edu.umd.cs.findbugs.classfile.engine.bcel.EngineRegistrar.class$;60;;
Class.forName;edu.umd.cs.findbugs.ba.SourceFinder;edu.umd.cs.findbugs.classfile.engine.bcel.EngineRegistrar.class$;60;;
Class.forName;edu.umd.cs.findbugs.ba.SourceInfoMap;edu.umd.cs.findbugs.ba.AnalysisCacheToAnalysisContextAdapter.class$;139;;
Class.forName;edu.umd.cs.findbugs.ba.SourceInfoMap;edu.umd.cs.findbugs.classfile.engine.bcel.EngineRegistrar.class$;60;;
Class.forName;edu.umd.cs.findbugs.ba.XFactory;edu.umd.cs.findbugs.ba.XFactory.class$;184;;
Class.forName;edu.umd.cs.findbugs.ba.ch.Subtypes;edu.umd.cs.findbugs.ba.AnalysisCacheToAnalysisContextAdapter.class$;139;;
Class.forName;edu.umd.cs.findbugs.ba.ch.Subtypes;edu.umd.cs.findbugs.classfile.engine.bcel.EngineRegistrar.class$;60;;
Class.forName;edu.umd.cs.findbugs.ba.deref.UnconditionalValueDerefAnalysis;edu.umd.cs.findbugs.ba.deref.UnconditionalValueDerefAnalysis.class$;77;;
Class.forName;edu.umd.cs.findbugs.ba.interproc.PropertyDatabase;edu.umd.cs.findbugs.ba.AnalysisContext.class$;550;;
Class.forName;edu.umd.cs.findbugs.ba.npe.IsNullValue;edu.umd.cs.findbugs.ba.npe.IsNullValue.class$;39;;
Class.forName;edu.umd.cs.findbugs.ba.npe.IsNullValueAnalysis;edu.umd.cs.findbugs.ba.npe.IsNullValueAnalysis.class$;72;;
Class.forName;edu.umd.cs.findbugs.ba.npe.IsNullValueFrame;edu.umd.cs.findbugs.ba.npe.IsNullValueFrame.class$;37;;
Class.forName;edu.umd.cs.findbugs.ba.npe.ParameterNullnessPropertyDatabase;edu.umd.cs.findbugs.ba.AnalysisCacheToAnalysisContextAdapter.class$;139;;
Class.forName;edu.umd.cs.findbugs.ba.npe.ParameterNullnessPropertyDatabase;edu.umd.cs.findbugs.classfile.engine.bcel.EngineRegistrar.class$;60;;
Class.forName;edu.umd.cs.findbugs.ba.npe.ReturnValueNullnessPropertyDatabase;edu.umd.cs.findbugs.ba.AnalysisCacheToAnalysisContextAdapter.class$;139;;
Class.forName;edu.umd.cs.findbugs.ba.npe.ReturnValueNullnessPropertyDatabase;edu.umd.cs.findbugs.classfile.engine.bcel.EngineRegistrar.class$;60;;
Class.forName;edu.umd.cs.findbugs.ba.type.FieldStoreTypeDatabase;edu.umd.cs.findbugs.ba.AnalysisCacheToAnalysisContextAdapter.class$;139;;
Class.forName;edu.umd.cs.findbugs.ba.type.FieldStoreTypeDatabase;edu.umd.cs.findbugs.classfile.engine.bcel.EngineRegistrar.class$;60;;
Class.forName;edu.umd.cs.findbugs.ba.type.TypeFrame;edu.umd.cs.findbugs.ba.type.TypeFrame.class$;40;;
Class.forName;edu.umd.cs.findbugs.classfile.analysis.ClassData;edu.umd.cs.findbugs.classfile.engine.ClassDataAnalysisEngine.class$;92;;
Class.forName;edu.umd.cs.findbugs.classfile.analysis.ClassData;edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine.class$;54;;
Class.forName;edu.umd.cs.findbugs.classfile.analysis.ClassData;edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine.class$;58;;
Class.forName;edu.umd.cs.findbugs.classfile.analysis.ClassInfo;edu.umd.cs.findbugs.FindBugs2.class$;483;;
Class.forName;edu.umd.cs.findbugs.classfile.analysis.ClassInfo;edu.umd.cs.findbugs.classfile.engine.ClassInfoAnalysisEngine.class$;54;;
Class.forName;edu.umd.cs.findbugs.detect.FindInconsistentSync2;edu.umd.cs.findbugs.detect.FindInconsistentSync2.class$;41;;
Class.forName;edu.umd.cs.findbugs.detect.FindNakedNotify;edu.umd.cs.findbugs.detect.FindNakedNotify.class$;34;;
Class.forName;edu.umd.cs.findbugs.detect.FindReturnRef;edu.umd.cs.findbugs.detect.FindReturnRef.class$;26;;
Class.forName;edu.umd.cs.findbugs.detect.InfiniteLoop;edu.umd.cs.findbugs.detect.InfiniteLoop.class$;41;;
Class.forName;edu.umd.cs.findbugs.graph.AbstractDepthFirstSearch;edu.umd.cs.findbugs.graph.AbstractDepthFirstSearch.class$;47;;
Class.forName;edu.umd.cs.findbugs.visitclass.DismantleBytecode;edu.umd.cs.findbugs.visitclass.DismantleBytecode.class$;46;;
Class.forName;java.lang.AbstractMethodError;org.apache.bcel.ExceptionConstants$1.class$;29;;
Class.forName;java.lang.ArithmeticException;org.apache.bcel.ExceptionConstants$1.class$;29;;
Class.forName;java.lang.ArrayIndexOutOfBoundsException;org.apache.bcel.ExceptionConstants$1.class$;29;;
Class.forName;java.lang.ClassCastException;org.apache.bcel.ExceptionConstants$1.class$;29;;
Class.forName;java.lang.ClassCircularityError;org.apache.bcel.ExceptionConstants$1.class$;29;;
Class.forName;java.lang.ClassFormatError;org.apache.bcel.ExceptionConstants$1.class$;29;;
Class.forName;java.lang.ExceptionInInitializerError;org.apache.bcel.ExceptionConstants$1.class$;29;;
Class.forName;java.lang.IllegalAccessError;org.apache.bcel.ExceptionConstants$1.class$;29;;
Class.forName;java.lang.IllegalMonitorStateException;org.apache.bcel.ExceptionConstants$1.class$;29;;
Class.forName;java.lang.IncompatibleClassChangeError;org.apache.bcel.ExceptionConstants$1.class$;29;;
Class.forName;java.lang.InstantiationError;org.apache.bcel.ExceptionConstants$1.class$;29;;
Class.forName;java.lang.LinkageError;org.apache.bcel.ExceptionConstants$1.class$;29;;
Class.forName;java.lang.NegativeArraySizeException;org.apache.bcel.ExceptionConstants$1.class$;29;;
Class.forName;java.lang.NoClassDefFoundError;org.apache.bcel.ExceptionConstants$1.class$;29;;
Class.forName;java.lang.NoSuchFieldError;org.apache.bcel.ExceptionConstants$1.class$;29;;
Class.forName;java.lang.NoSuchMethodError;org.apache.bcel.ExceptionConstants$1.class$;29;;
Class.forName;java.lang.NullPointerException;org.apache.bcel.ExceptionConstants$1.class$;29;;
Class.forName;java.lang.RuntimeException;org.apache.bcel.ExceptionConstants$1.class$;29;;
Class.forName;java.lang.Throwable;org.apache.bcel.ExceptionConstants$1.class$;29;;
Class.forName;java.lang.UnsatisfiedLinkError;org.apache.bcel.ExceptionConstants$1.class$;29;;
Class.forName;java.lang.VerifyError;org.apache.bcel.ExceptionConstants$1.class$;29;;
Class.forName;java.util.CurrencyData;java.util.Currency$1.run;128;;
Class.forName;java.util.LinkedList;edu.umd.cs.findbugs.detect.UnreadFields.class$;55;;
Class.forName;javax.xml.parsers.SAXParserFactory;org.dom4j.io.SAXHelper.classNameAvailable;148;;
Class.forName;org.apache.bcel.classfile.JavaClass;edu.umd.cs.findbugs.AnalysisCacheToRepositoryAdapter.class$;64;;
Class.forName;org.apache.bcel.classfile.JavaClass;edu.umd.cs.findbugs.ba.AnalysisCacheToAnalysisContextAdapter.class$;139;;
Class.forName;org.apache.bcel.classfile.JavaClass;edu.umd.cs.findbugs.classfile.engine.bcel.ClassContextClassAnalysisEngine.class$;48;;
Class.forName;org.apache.bcel.classfile.JavaClass;edu.umd.cs.findbugs.classfile.engine.bcel.JavaClassAnalysisEngine.class$;58;;
Class.forName;org.apache.bcel.generic.ALOAD;org.apache.bcel.generic.Instruction.readInstruction;161;;
Class.forName;org.apache.bcel.generic.BranchHandle;org.apache.bcel.generic.InstructionHandle.class$;76;;
Class.forName;org.apache.bcel.generic.GETSTATIC;org.apache.bcel.generic.Instruction.readInstruction;161;;
Class.forName;org.apache.bcel.generic.INVOKESPECIAL;org.apache.bcel.generic.Instruction.readInstruction;161;;
Class.forName;org.apache.bcel.generic.INVOKEVIRTUAL;org.apache.bcel.generic.Instruction.readInstruction;161;;
Class.forName;org.apache.bcel.generic.LDC;org.apache.bcel.generic.Instruction.readInstruction;161;;
Class.forName;org.dom4j.DocumentFactory;org.dom4j.DocumentFactory.class$;49;;
Class.forName;org.dom4j.DocumentFactory;org.dom4j.DocumentFactory.createSingleton;294;;
Class.forName;org.dom4j.io.SAXHelper;org.dom4j.io.SAXHelper.class$;27;;
Class.forName;org.objectweb.asm.ClassReader;edu.umd.cs.findbugs.classfile.engine.asm.ClassReaderAnalysisEngine.class$;43;;
Class.forName;org.saxpath.XPathReader;org.saxpath.helpers.XPathReaderFactory.class$;19;;
Class.forName;org.saxpath.helpers.XPathReaderFactory;org.saxpath.helpers.XPathReaderFactory.class$;19;;
Class.forName;sun.net.www.protocol.jar.Handler;java.net.URL.getURLStreamHandler;1163;;
Class.newInstance;com.sun.org.apache.xerces.internal.impl.dv.dtd.DTDDVFactoryImpl;com.sun.org.apache.xerces.internal.utils.ObjectFactory.newInstance;304;;
Class.newInstance;com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl;javax.xml.parsers.FactoryFinder.newInstance;155;;
Class.newInstance;com.werken.saxpath.XPathReader;org.saxpath.helpers.XPathReaderFactory.createReader;122;;
Class.newInstance;org.apache.bcel.generic.ALOAD;org.apache.bcel.generic.Instruction.readInstruction;168;;
Class.newInstance;org.apache.bcel.generic.GETSTATIC;org.apache.bcel.generic.Instruction.readInstruction;168;;
Class.newInstance;org.apache.bcel.generic.INVOKESPECIAL;org.apache.bcel.generic.Instruction.readInstruction;168;;
Class.newInstance;org.apache.bcel.generic.INVOKEVIRTUAL;org.apache.bcel.generic.Instruction.readInstruction;168;;
Class.newInstance;org.apache.bcel.generic.LDC;org.apache.bcel.generic.Instruction.readInstruction;168;;
Class.newInstance;org.dom4j.DocumentFactory;org.dom4j.DocumentFactory.createSingleton;299;;
Class.newInstance;sun.net.www.protocol.jar.Handler;java.net.URL.getURLStreamHandler;1171;;
Class.newInstance;sun.reflect.GeneratedConstructorAccessor$HASHED$7b916dc4ac6ca3b2c3fcd1fd199e4f0f9d94fab4;sun.reflect.MethodAccessorGenerator$1.run;381;;
Class.newInstance;sun.text.resources.FormatData;java.util.ResourceBundle$Control.newBundle;2295;;
Class.newInstance;sun.text.resources.FormatData_en;java.util.ResourceBundle$Control.newBundle;2295;;
Class.newInstance;sun.text.resources.FormatData_en_US;java.util.ResourceBundle$Control.newBundle;2295;;
Class.newInstance;sun.util.resources.CurrencyNames;java.util.ResourceBundle$Control.newBundle;2295;;
Class.newInstance;sun.util.resources.CurrencyNames_en_US;java.util.ResourceBundle$Control.newBundle;2295;;
Constructor.newInstance;<com.sun.org.apache.xerces.internal.impl.dv.dtd.DTDDVFactoryImpl: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<com.werken.saxpath.XPathReader: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<edu.umd.cs.findbugs.ba.CheckReturnAnnotationDatabase: void <init>()>;edu.umd.cs.findbugs.classfile.ReflectionDatabaseFactory.createUsingConstructor;112;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.ba.JCIPAnnotationDatabase: void <init>()>;edu.umd.cs.findbugs.classfile.ReflectionDatabaseFactory.createUsingConstructor;112;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.ba.NullnessAnnotationDatabase: void <init>()>;edu.umd.cs.findbugs.classfile.ReflectionDatabaseFactory.createUsingConstructor;112;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.ba.SourceInfoMap: void <init>()>;edu.umd.cs.findbugs.classfile.ReflectionDatabaseFactory.createUsingConstructor;112;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.ba.ch.Subtypes: void <init>()>;edu.umd.cs.findbugs.classfile.ReflectionDatabaseFactory.createUsingConstructor;112;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.ba.npe.ParameterNullnessPropertyDatabase: void <init>()>;edu.umd.cs.findbugs.classfile.ReflectionDatabaseFactory.createUsingConstructor;112;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.ba.npe.ReturnValueNullnessPropertyDatabase: void <init>()>;edu.umd.cs.findbugs.classfile.ReflectionDatabaseFactory.createUsingConstructor;112;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.ba.type.FieldStoreTypeDatabase: void <init>()>;edu.umd.cs.findbugs.classfile.ReflectionDatabaseFactory.createUsingConstructor;112;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.BadResultSetAccess: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.BadSyntaxForRegularExpression: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.BadUseOfReturnValue: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.BadlyOverriddenAdapter: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.CalledMethods: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.CheckImmutableAnnotation: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.CloneIdiom: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.ComparatorIdiom: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.ConfusedInheritance: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.ConfusionBetweenInheritedAndOuterMethod: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.DoInsideDoPrivileged: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.DontCatchIllegalMonitorStateException: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.DontUseEnum: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.DroppedException: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.DumbMethodInvocations: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.DumbMethods: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.DuplicateBranches: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.EmptyZipFileEntry: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.FinalizerNullsFields: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.FindBadCast2: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.FindBadForLoop: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.FindBugsSummaryStats: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.FindDeadLocalStores: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.FindDoubleCheck: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.FindEmptySynchronizedBlock: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.FindFieldSelfAssignment: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.FindFinalizeInvocations: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.FindFloatEquality: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.FindHEmismatch: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.FindInconsistentSync2: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.FindJSR166LockMonitorenter: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.FindLocalSelfAssignment2: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.FindMaskedFields: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.FindMismatchedWaitOrNotify: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.FindNakedNotify: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.FindNonSerializableStoreIntoSession: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.FindNonSerializableValuePassedToWriteObject: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.FindNonShortCircuit: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.FindNullDeref: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.FindOpenStream: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.FindPuzzlers: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.FindRefComparison: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.FindReturnRef: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.FindRunInvocations: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.FindSelfComparison2: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.FindSelfComparison: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.FindSleepWithLockHeld: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.FindSpinLoop: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.FindSqlInjection: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.FindTwoLockWait: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.FindUncalledPrivateMethods: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.FindUnconditionalWait: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.FindUninitializedGet: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.FindUnrelatedTypesInGenericContainer: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.FindUnreleasedLock: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.FindUnsyncGet: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.FindUselessControlFlow: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.HugeSharedStringConstants: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.IDivResultCastToDouble: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.IncompatMask: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.InefficientToArray: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.InfiniteLoop: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.InfiniteRecursiveLoop: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.InheritanceUnsafeGetResource: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.InitializationChain: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.InstantiateStaticClass: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.InvalidJUnitTest: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.IteratorIdioms: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.LazyInit: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.LoadOfKnownNullValue: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.MethodReturnCheck: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.Methods: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.MultithreadedInstanceAccess: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.MutableLock: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.MutableStaticFields: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.Naming: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.NoteAnnotationRetention: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.NoteCheckReturnValue: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.NoteCheckReturnValueAnnotations: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.NoteJCIPAnnotation: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.NoteNonNullAnnotations: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.NoteNonnullReturnValues: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.NoteSuppressedWarnings: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.NoteUnconditionalParamDerefs: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.NumberConstructor: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.PreferZeroLengthArrays: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.QuestionableBooleanAssignment: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.ReadReturnShouldBeChecked: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.RedundantInterfaces: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.RuntimeExceptionCapture: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.SerializableIdiom: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.StartInConstructor: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.StaticCalendarDetector: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.StringConcatenation: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.SuperfluousInstanceOf: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.SuspiciousThreadInterrupted: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.SwitchFallthrough: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.SynchronizeAndNullCheckField: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.URLProblems: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.UncallableMethodOfAnonymousClass: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.UnnecessaryMath: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.UnreadFields: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.VarArgsProblems: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.VolatileUsage: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.WaitInLoop: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.WrongMapIterator: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<edu.umd.cs.findbugs.detect.XMLFactoryBypass: void <init>(edu.umd.cs.findbugs.BugReporter)>;edu.umd.cs.findbugs.DetectorFactory$ReflectionDetectorCreator.createDetector;62;isAccessible=false;
Constructor.newInstance;<org.apache.bcel.generic.ALOAD: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<org.apache.bcel.generic.GETSTATIC: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<org.apache.bcel.generic.INVOKESPECIAL: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<org.apache.bcel.generic.INVOKEVIRTUAL: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<org.apache.bcel.generic.LDC: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<org.dom4j.DocumentFactory: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.net.www.protocol.jar.Handler: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.reflect.GeneratedConstructorAccessor$HASHED$7b916dc4ac6ca3b2c3fcd1fd199e4f0f9d94fab4: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.text.resources.FormatData: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.text.resources.FormatData_en: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.text.resources.FormatData_en_US: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.util.resources.CurrencyNames: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.util.resources.CurrencyNames_en_US: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Field.get*;<java.util.CurrencyData: int[] otherCurrenciesDFD>;java.util.Currency$1.run;136;isAccessible=false;
Field.get*;<java.util.CurrencyData: int[] scNewCurrenciesDFD>;java.util.Currency$1.run;134;isAccessible=false;
Field.get*;<java.util.CurrencyData: int[] scOldCurrenciesDFD>;java.util.Currency$1.run;133;isAccessible=false;
Field.get*;<java.util.CurrencyData: java.lang.String mainTable>;java.util.Currency$1.run;129;isAccessible=false;
Field.get*;<java.util.CurrencyData: java.lang.String otherCurrencies>;java.util.Currency$1.run;135;isAccessible=false;
Field.get*;<java.util.CurrencyData: java.lang.String[] scNewCurrencies>;java.util.Currency$1.run;132;isAccessible=false;
Field.get*;<java.util.CurrencyData: java.lang.String[] scOldCurrencies>;java.util.Currency$1.run;131;isAccessible=false;
Field.get*;<java.util.CurrencyData: long[] scCutOverTimes>;java.util.Currency$1.run;130;isAccessible=false;
Method.invoke;<edu.umd.cs.findbugs.ba.InnerClassAccessMap: edu.umd.cs.findbugs.ba.InnerClassAccessMap create()>;edu.umd.cs.findbugs.classfile.ReflectionDatabaseFactory.createUsingStaticCreateMethod;89;isAccessible=false;
