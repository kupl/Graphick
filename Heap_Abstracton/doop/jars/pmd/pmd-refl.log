Array.newInstance;boolean[];sun.misc.ProxyGenerator$PrimitiveTypeInfo.<init>;1638;;
Array.newInstance;byte[];sun.misc.ProxyGenerator$PrimitiveTypeInfo.<init>;1638;;
Array.newInstance;char[];sun.misc.ProxyGenerator$PrimitiveTypeInfo.<init>;1638;;
Array.newInstance;double[];sun.misc.ProxyGenerator$PrimitiveTypeInfo.<init>;1638;;
Array.newInstance;float[];sun.misc.ProxyGenerator$PrimitiveTypeInfo.<init>;1638;;
Array.newInstance;int[];sun.misc.ProxyGenerator$PrimitiveTypeInfo.<init>;1638;;
Array.newInstance;java.lang.String[];java.util.Arrays.copyOf;2760;;
Array.newInstance;java.lang.annotation.ElementType[];sun.reflect.annotation.AnnotationParser.parseEnumArray;666;;
Array.newInstance;java.lang.reflect.Method[];java.util.Arrays.copyOf;2760;;
Array.newInstance;long[];sun.misc.ProxyGenerator$PrimitiveTypeInfo.<init>;1638;;
Array.newInstance;short[];sun.misc.ProxyGenerator$PrimitiveTypeInfo.<init>;1638;;
Class.forName;com.beust.jcommander.Parameter;com.sun.proxy.$Proxy$HASHED$d37bb294479f8e69d3803d4030d1aa758da2773a.<clinit>;;;
Class.forName;com.beust.jcommander.Parameter;java.lang.reflect.Proxy.getProxyClass0;457;;
Class.forName;com.beust.jcommander.Parameter;sun.reflect.generics.factory.CoreReflectionFactory.makeNamedType;95;;
Class.forName;com.beust.jcommander.converters.CommaParameterSplitter;sun.reflect.generics.factory.CoreReflectionFactory.makeNamedType;95;;
Class.forName;com.beust.jcommander.converters.NoConverter;sun.reflect.generics.factory.CoreReflectionFactory.makeNamedType;95;;
Class.forName;com.beust.jcommander.validators.NoValidator;sun.reflect.generics.factory.CoreReflectionFactory.makeNamedType;95;;
Class.forName;com.beust.jcommander.validators.NoValueValidator;sun.reflect.generics.factory.CoreReflectionFactory.makeNamedType;95;;
Class.forName;com.beust.jcommander.validators.PositiveInteger;sun.reflect.generics.factory.CoreReflectionFactory.makeNamedType;95;;
Class.forName;java.lang.Object;com.sun.proxy.$Proxy$HASHED$8b1f6983c61926621b33ad9e78f826c9d45ce531.<clinit>;;;
Class.forName;java.lang.Object;com.sun.proxy.$Proxy$HASHED$a8a55727719c1359041bd1ad1f394233e5a78552.<clinit>;;;
Class.forName;java.lang.Object;com.sun.proxy.$Proxy$HASHED$c211a163bb441f634cf7a47f349950899aff345c.<clinit>;;;
Class.forName;java.lang.Object;com.sun.proxy.$Proxy$HASHED$d37bb294479f8e69d3803d4030d1aa758da2773a.<clinit>;;;
Class.forName;java.lang.annotation.Documented;com.sun.proxy.$Proxy$HASHED$c211a163bb441f634cf7a47f349950899aff345c.<clinit>;;;
Class.forName;java.lang.annotation.Documented;java.lang.reflect.Proxy.getProxyClass0;457;;
Class.forName;java.lang.annotation.Documented;sun.reflect.generics.factory.CoreReflectionFactory.makeNamedType;95;;
Class.forName;java.lang.annotation.ElementType;sun.reflect.generics.factory.CoreReflectionFactory.makeNamedType;95;;
Class.forName;java.lang.annotation.Retention;com.sun.proxy.$Proxy$HASHED$a8a55727719c1359041bd1ad1f394233e5a78552.<clinit>;;;
Class.forName;java.lang.annotation.Retention;java.lang.reflect.Proxy.getProxyClass0;457;;
Class.forName;java.lang.annotation.Retention;sun.reflect.generics.factory.CoreReflectionFactory.makeNamedType;95;;
Class.forName;java.lang.annotation.RetentionPolicy;sun.reflect.generics.factory.CoreReflectionFactory.makeNamedType;95;;
Class.forName;java.lang.annotation.Target;com.sun.proxy.$Proxy$HASHED$8b1f6983c61926621b33ad9e78f826c9d45ce531.<clinit>;;;
Class.forName;java.lang.annotation.Target;java.lang.reflect.Proxy.getProxyClass0;457;;
Class.forName;java.lang.annotation.Target;sun.reflect.generics.factory.CoreReflectionFactory.makeNamedType;95;;
Class.forName;java.util.CurrencyData;java.util.Currency$1.run;128;;
Class.forName;net.sourceforge.pmd.cli.PMDParameters$PropertyConverter;sun.reflect.generics.factory.CoreReflectionFactory.makeNamedType;95;;
Class.forName;net.sourceforge.pmd.cli.PMDParameters$RulePriorityConverter;sun.reflect.generics.factory.CoreReflectionFactory.makeNamedType;95;;
Class.forName;net.sourceforge.pmd.lang.cpp.CppLanguageModule;java.util.ServiceLoader$LazyIterator.next;346;;
Class.forName;net.sourceforge.pmd.lang.cs.CsLanguageModule;java.util.ServiceLoader$LazyIterator.next;346;;
Class.forName;net.sourceforge.pmd.lang.ecmascript.EcmascriptLanguageModule;java.util.ServiceLoader$LazyIterator.next;346;;
Class.forName;net.sourceforge.pmd.lang.fortran.FortranLanguageModule;java.util.ServiceLoader$LazyIterator.next;346;;
Class.forName;net.sourceforge.pmd.lang.java.JavaLanguageModule;java.util.ServiceLoader$LazyIterator.next;346;;
Class.forName;net.sourceforge.pmd.lang.jsp.JspLanguageModule;java.util.ServiceLoader$LazyIterator.next;346;;
Class.forName;net.sourceforge.pmd.lang.matlab.MatlabLanguageModule;java.util.ServiceLoader$LazyIterator.next;346;;
Class.forName;net.sourceforge.pmd.lang.objectivec.ObjectiveCLanguageModule;java.util.ServiceLoader$LazyIterator.next;346;;
Class.forName;net.sourceforge.pmd.lang.php.PhpLanguageModule;java.util.ServiceLoader$LazyIterator.next;346;;
Class.forName;net.sourceforge.pmd.lang.plsql.PLSQLLanguageModule;java.util.ServiceLoader$LazyIterator.next;346;;
Class.forName;net.sourceforge.pmd.lang.python.PythonLanguageModule;java.util.ServiceLoader$LazyIterator.next;346;;
Class.forName;net.sourceforge.pmd.lang.ruby.RubyLanguageModule;java.util.ServiceLoader$LazyIterator.next;346;;
Class.forName;net.sourceforge.pmd.lang.scala.ScalaLanguageModule;java.util.ServiceLoader$LazyIterator.next;346;;
Class.forName;net.sourceforge.pmd.lang.vm.VmLanguageModule;java.util.ServiceLoader$LazyIterator.next;346;;
Class.forName;net.sourceforge.pmd.lang.xml.XmlLanguageModule;java.util.ServiceLoader$LazyIterator.next;346;;
Class.forName;net.sourceforge.pmd.lang.xsl.XslLanguageModule;java.util.ServiceLoader$LazyIterator.next;346;;
Class.forName;org.jaxen.saxpath.XPathReader;org.jaxen.saxpath.helpers.XPathReaderFactory.class$;139;;
Class.forName;org.jaxen.saxpath.base.XPathReader;org.jaxen.saxpath.helpers.XPathReaderFactory.createReader;137;;
Class.forName;org.jaxen.saxpath.helpers.XPathReaderFactory;org.jaxen.saxpath.helpers.XPathReaderFactory.class$;139;;
Class.newInstance;com.beust.jcommander.validators.NoValidator;com.beust.jcommander.ParameterDescription.validateParameter;301;;
Class.newInstance;com.beust.jcommander.validators.NoValueValidator;com.beust.jcommander.ParameterDescription.validateValueParameter;286;;
Class.newInstance;com.sun.org.apache.xerces.internal.impl.dv.dtd.DTDDVFactoryImpl;com.sun.org.apache.xerces.internal.utils.ObjectFactory.newInstance;304;;
Class.newInstance;com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl;javax.xml.parsers.FactoryFinder.newInstance;155;;
Class.newInstance;net.sourceforge.pmd.lang.cpp.CppLanguageModule;java.util.ServiceLoader$LazyIterator.next;356;;
Class.newInstance;net.sourceforge.pmd.lang.cs.CsLanguageModule;java.util.ServiceLoader$LazyIterator.next;356;;
Class.newInstance;net.sourceforge.pmd.lang.ecmascript.EcmascriptLanguageModule;java.util.ServiceLoader$LazyIterator.next;356;;
Class.newInstance;net.sourceforge.pmd.lang.fortran.FortranLanguageModule;java.util.ServiceLoader$LazyIterator.next;356;;
Class.newInstance;net.sourceforge.pmd.lang.java.JavaLanguageModule;java.util.ServiceLoader$LazyIterator.next;356;;
Class.newInstance;net.sourceforge.pmd.lang.java.rule.JavaRuleChainVisitor;net.sourceforge.pmd.RuleChain.getRuleChainVisitor;76;;
Class.newInstance;net.sourceforge.pmd.lang.java.rule.basic.AvoidBranchingStatementAsLastInLoopRule;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;377;;
Class.newInstance;net.sourceforge.pmd.lang.java.rule.basic.AvoidMultipleUnaryOperatorsRule;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;377;;
Class.newInstance;net.sourceforge.pmd.lang.java.rule.basic.AvoidUsingHardCodedIPRule;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;377;;
Class.newInstance;net.sourceforge.pmd.lang.java.rule.basic.AvoidUsingOctalValuesRule;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;377;;
Class.newInstance;net.sourceforge.pmd.lang.java.rule.basic.BigIntegerInstantiationRule;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;377;;
Class.newInstance;net.sourceforge.pmd.lang.java.rule.basic.BooleanInstantiationRule;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;377;;
Class.newInstance;net.sourceforge.pmd.lang.java.rule.basic.BrokenNullCheckRule;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;377;;
Class.newInstance;net.sourceforge.pmd.lang.java.rule.basic.CheckResultSetRule;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;377;;
Class.newInstance;net.sourceforge.pmd.lang.java.rule.basic.CheckSkipResultRule;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;377;;
Class.newInstance;net.sourceforge.pmd.lang.java.rule.basic.DoubleCheckedLockingRule;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;377;;
Class.newInstance;net.sourceforge.pmd.lang.java.rule.basic.OverrideBothEqualsAndHashcodeRule;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;377;;
Class.newInstance;net.sourceforge.pmd.lang.java.rule.design.AccessorClassGenerationRule;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;377;;
Class.newInstance;net.sourceforge.pmd.lang.java.rule.design.AssignmentToNonFinalStaticRule;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;377;;
Class.newInstance;net.sourceforge.pmd.lang.java.rule.design.AvoidDeeplyNestedIfStmtsRule;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;377;;
Class.newInstance;net.sourceforge.pmd.lang.java.rule.design.AvoidReassigningParametersRule;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;377;;
Class.newInstance;net.sourceforge.pmd.lang.java.rule.design.CloseResourceRule;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;377;;
Class.newInstance;net.sourceforge.pmd.lang.java.rule.design.CompareObjectsWithEqualsRule;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;377;;
Class.newInstance;net.sourceforge.pmd.lang.java.rule.design.ConfusingTernaryRule;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;377;;
Class.newInstance;net.sourceforge.pmd.lang.java.rule.design.ConstructorCallsOverridableMethodRule;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;377;;
Class.newInstance;net.sourceforge.pmd.lang.java.rule.design.FieldDeclarationsShouldBeAtStartOfClassRule;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;377;;
Class.newInstance;net.sourceforge.pmd.lang.java.rule.design.GodClassRule;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;377;;
Class.newInstance;net.sourceforge.pmd.lang.java.rule.design.IdempotentOperationsRule;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;377;;
Class.newInstance;net.sourceforge.pmd.lang.java.rule.design.ImmutableFieldRule;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;377;;
Class.newInstance;net.sourceforge.pmd.lang.java.rule.design.NonThreadSafeSingletonRule;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;377;;
Class.newInstance;net.sourceforge.pmd.lang.java.rule.design.PreserveStackTraceRule;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;377;;
Class.newInstance;net.sourceforge.pmd.lang.java.rule.design.SimplifyBooleanReturnsRule;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;377;;
Class.newInstance;net.sourceforge.pmd.lang.java.rule.design.SingularFieldRule;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;377;;
Class.newInstance;net.sourceforge.pmd.lang.java.rule.design.SwitchDensityRule;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;377;;
Class.newInstance;net.sourceforge.pmd.lang.java.rule.design.UnnecessaryLocalBeforeReturnRule;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;377;;
Class.newInstance;net.sourceforge.pmd.lang.java.rule.design.UnsynchronizedStaticDateFormatterRule;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;377;;
Class.newInstance;net.sourceforge.pmd.lang.java.rule.design.UseCollectionIsEmptyRule;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;377;;
Class.newInstance;net.sourceforge.pmd.lang.java.rule.design.UseUtilityClassRule;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;377;;
Class.newInstance;net.sourceforge.pmd.lang.java.rule.unnecessary.UnnecessaryConversionTemporaryRule;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;377;;
Class.newInstance;net.sourceforge.pmd.lang.java.rule.unnecessary.UnnecessaryReturnRule;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;377;;
Class.newInstance;net.sourceforge.pmd.lang.java.rule.unnecessary.UselessOperationOnImmutableRule;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;377;;
Class.newInstance;net.sourceforge.pmd.lang.java.rule.unnecessary.UselessOverridingMethodRule;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;377;;
Class.newInstance;net.sourceforge.pmd.lang.jsp.JspLanguageModule;java.util.ServiceLoader$LazyIterator.next;356;;
Class.newInstance;net.sourceforge.pmd.lang.matlab.MatlabLanguageModule;java.util.ServiceLoader$LazyIterator.next;356;;
Class.newInstance;net.sourceforge.pmd.lang.objectivec.ObjectiveCLanguageModule;java.util.ServiceLoader$LazyIterator.next;356;;
Class.newInstance;net.sourceforge.pmd.lang.php.PhpLanguageModule;java.util.ServiceLoader$LazyIterator.next;356;;
Class.newInstance;net.sourceforge.pmd.lang.plsql.PLSQLLanguageModule;java.util.ServiceLoader$LazyIterator.next;356;;
Class.newInstance;net.sourceforge.pmd.lang.python.PythonLanguageModule;java.util.ServiceLoader$LazyIterator.next;356;;
Class.newInstance;net.sourceforge.pmd.lang.ruby.RubyLanguageModule;java.util.ServiceLoader$LazyIterator.next;356;;
Class.newInstance;net.sourceforge.pmd.lang.rule.XPathRule;net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode;377;;
Class.newInstance;net.sourceforge.pmd.lang.scala.ScalaLanguageModule;java.util.ServiceLoader$LazyIterator.next;356;;
Class.newInstance;net.sourceforge.pmd.lang.vm.VmLanguageModule;java.util.ServiceLoader$LazyIterator.next;356;;
Class.newInstance;net.sourceforge.pmd.lang.xml.XmlLanguageModule;java.util.ServiceLoader$LazyIterator.next;356;;
Class.newInstance;net.sourceforge.pmd.lang.xsl.XslLanguageModule;java.util.ServiceLoader$LazyIterator.next;356;;
Class.newInstance;org.jaxen.saxpath.base.XPathReader;org.jaxen.saxpath.helpers.XPathReaderFactory.createReader;157;;
Class.newInstance;sun.reflect.GeneratedConstructorAccessor$HASHED$21767b070bd3cfacf65aba11fcc6af5b15944ef4;sun.reflect.MethodAccessorGenerator$1.run;381;;
Class.newInstance;sun.reflect.GeneratedConstructorAccessor$HASHED$960204d78418d9368ab274833c72abd91a9bfef1;sun.reflect.MethodAccessorGenerator$1.run;381;;
Class.newInstance;sun.reflect.GeneratedConstructorAccessor$HASHED$a9e333741f14ffccb424efd2ab3a9cf2aa904f82;sun.reflect.MethodAccessorGenerator$1.run;381;;
Class.newInstance;sun.reflect.GeneratedConstructorAccessor$HASHED$bf67be7aa2fba0e0c4125f99f7ac27c22b632870;sun.reflect.MethodAccessorGenerator$1.run;381;;
Class.newInstance;sun.reflect.GeneratedConstructorAccessor$HASHED$d450a940317fe2b30f049527a78cd2c99fe0eefd;sun.reflect.MethodAccessorGenerator$1.run;381;;
Class.newInstance;sun.text.resources.FormatData;java.util.ResourceBundle$Control.newBundle;2295;;
Class.newInstance;sun.text.resources.FormatData_en;java.util.ResourceBundle$Control.newBundle;2295;;
Constructor.newInstance;<com.beust.jcommander.converters.StringConverter: void <init>()>;com.beust.jcommander.JCommander.instantiateConverter;1330;isAccessible=false;
Constructor.newInstance;<com.beust.jcommander.validators.NoValidator: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<com.beust.jcommander.validators.NoValueValidator: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<com.sun.org.apache.xerces.internal.impl.dv.dtd.DTDDVFactoryImpl: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<com.sun.proxy.$Proxy$HASHED$8b1f6983c61926621b33ad9e78f826c9d45ce531: void <init>(java.lang.reflect.InvocationHandler)>;java.lang.reflect.Proxy.newInstance;717;isAccessible=false;
Constructor.newInstance;<com.sun.proxy.$Proxy$HASHED$a8a55727719c1359041bd1ad1f394233e5a78552: void <init>(java.lang.reflect.InvocationHandler)>;java.lang.reflect.Proxy.newInstance;717;isAccessible=false;
Constructor.newInstance;<com.sun.proxy.$Proxy$HASHED$c211a163bb441f634cf7a47f349950899aff345c: void <init>(java.lang.reflect.InvocationHandler)>;java.lang.reflect.Proxy.newInstance;717;isAccessible=false;
Constructor.newInstance;<com.sun.proxy.$Proxy$HASHED$d37bb294479f8e69d3803d4030d1aa758da2773a: void <init>(java.lang.reflect.InvocationHandler)>;java.lang.reflect.Proxy.newInstance;717;isAccessible=false;
Constructor.newInstance;<net.sourceforge.pmd.lang.cpp.CppLanguageModule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.cs.CsLanguageModule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.ecmascript.EcmascriptLanguageModule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.fortran.FortranLanguageModule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.java.JavaLanguageModule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.java.rule.JavaRuleChainVisitor: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.java.rule.basic.AvoidBranchingStatementAsLastInLoopRule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.java.rule.basic.AvoidMultipleUnaryOperatorsRule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.java.rule.basic.AvoidUsingHardCodedIPRule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.java.rule.basic.AvoidUsingOctalValuesRule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.java.rule.basic.BigIntegerInstantiationRule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.java.rule.basic.BooleanInstantiationRule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.java.rule.basic.BrokenNullCheckRule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.java.rule.basic.CheckResultSetRule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.java.rule.basic.CheckSkipResultRule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.java.rule.basic.DoubleCheckedLockingRule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.java.rule.basic.OverrideBothEqualsAndHashcodeRule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.java.rule.design.AccessorClassGenerationRule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.java.rule.design.AssignmentToNonFinalStaticRule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.java.rule.design.AvoidDeeplyNestedIfStmtsRule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.java.rule.design.AvoidReassigningParametersRule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.java.rule.design.CloseResourceRule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.java.rule.design.CompareObjectsWithEqualsRule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.java.rule.design.ConfusingTernaryRule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.java.rule.design.ConstructorCallsOverridableMethodRule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.java.rule.design.FieldDeclarationsShouldBeAtStartOfClassRule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.java.rule.design.GodClassRule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.java.rule.design.IdempotentOperationsRule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.java.rule.design.ImmutableFieldRule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.java.rule.design.NonThreadSafeSingletonRule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.java.rule.design.PreserveStackTraceRule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.java.rule.design.SimplifyBooleanReturnsRule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.java.rule.design.SingularFieldRule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.java.rule.design.SwitchDensityRule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.java.rule.design.UnnecessaryLocalBeforeReturnRule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.java.rule.design.UnsynchronizedStaticDateFormatterRule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.java.rule.design.UseCollectionIsEmptyRule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.java.rule.design.UseUtilityClassRule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.java.rule.unnecessary.UnnecessaryConversionTemporaryRule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.java.rule.unnecessary.UnnecessaryReturnRule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.java.rule.unnecessary.UselessOperationOnImmutableRule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.java.rule.unnecessary.UselessOverridingMethodRule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.jsp.JspLanguageModule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.matlab.MatlabLanguageModule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.objectivec.ObjectiveCLanguageModule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.php.PhpLanguageModule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.plsql.PLSQLLanguageModule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.python.PythonLanguageModule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.ruby.RubyLanguageModule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.rule.XPathRule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.scala.ScalaLanguageModule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.vm.VmLanguageModule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.xml.XmlLanguageModule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.lang.xsl.XslLanguageModule: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<net.sourceforge.pmd.renderers.CSVRenderer: void <init>()>;net.sourceforge.pmd.renderers.RendererFactory.createRenderer;60;isAccessible=false;
Constructor.newInstance;<net.sourceforge.pmd.renderers.EmacsRenderer: void <init>()>;net.sourceforge.pmd.renderers.RendererFactory.createRenderer;60;isAccessible=false;
Constructor.newInstance;<net.sourceforge.pmd.renderers.HTMLRenderer: void <init>()>;net.sourceforge.pmd.renderers.RendererFactory.createRenderer;60;isAccessible=false;
Constructor.newInstance;<net.sourceforge.pmd.renderers.IDEAJRenderer: void <init>()>;net.sourceforge.pmd.renderers.RendererFactory.createRenderer;60;isAccessible=false;
Constructor.newInstance;<net.sourceforge.pmd.renderers.SummaryHTMLRenderer: void <init>()>;net.sourceforge.pmd.renderers.RendererFactory.createRenderer;60;isAccessible=false;
Constructor.newInstance;<net.sourceforge.pmd.renderers.TextColorRenderer: void <init>()>;net.sourceforge.pmd.renderers.RendererFactory.createRenderer;60;isAccessible=false;
Constructor.newInstance;<net.sourceforge.pmd.renderers.TextPadRenderer: void <init>()>;net.sourceforge.pmd.renderers.RendererFactory.createRenderer;60;isAccessible=false;
Constructor.newInstance;<net.sourceforge.pmd.renderers.TextRenderer: void <init>()>;net.sourceforge.pmd.renderers.RendererFactory.createRenderer;60;isAccessible=false;
Constructor.newInstance;<net.sourceforge.pmd.renderers.VBHTMLRenderer: void <init>()>;net.sourceforge.pmd.renderers.RendererFactory.createRenderer;60;isAccessible=false;
Constructor.newInstance;<net.sourceforge.pmd.renderers.XMLRenderer: void <init>()>;net.sourceforge.pmd.renderers.RendererFactory.createRenderer;60;isAccessible=false;
Constructor.newInstance;<net.sourceforge.pmd.renderers.XSLTRenderer: void <init>()>;net.sourceforge.pmd.renderers.RendererFactory.createRenderer;60;isAccessible=false;
Constructor.newInstance;<net.sourceforge.pmd.renderers.YAHTMLRenderer: void <init>()>;net.sourceforge.pmd.renderers.RendererFactory.createRenderer;60;isAccessible=false;
Constructor.newInstance;<org.jaxen.saxpath.base.XPathReader: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.reflect.GeneratedConstructorAccessor$HASHED$21767b070bd3cfacf65aba11fcc6af5b15944ef4: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.reflect.GeneratedConstructorAccessor$HASHED$960204d78418d9368ab274833c72abd91a9bfef1: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.reflect.GeneratedConstructorAccessor$HASHED$a9e333741f14ffccb424efd2ab3a9cf2aa904f82: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.reflect.GeneratedConstructorAccessor$HASHED$bf67be7aa2fba0e0c4125f99f7ac27c22b632870: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.reflect.GeneratedConstructorAccessor$HASHED$d450a940317fe2b30f049527a78cd2c99fe0eefd: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.text.resources.FormatData: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Constructor.newInstance;<sun.text.resources.FormatData_en: void <init>()>;java.lang.Class.newInstance0;;isAccessible=true;
Method.invoke;<java.io.Console: java.io.PrintWriter writer()>;com.beust.jcommander.internal.JDK6Console.<init>;17;isAccessible=false;
Method.invoke;<java.lang.System: java.io.Console console()>;com.beust.jcommander.JCommander.getConsole;216;isAccessible=false;
Method.invoke;<java.lang.annotation.ElementType: java.lang.annotation.ElementType[] values()>;java.lang.Class.getEnumConstantsShared;;isAccessible=true;
Method.invoke;<java.lang.annotation.RetentionPolicy: java.lang.annotation.RetentionPolicy[] values()>;java.lang.Class.getEnumConstantsShared;;isAccessible=true;
Method.invoke;<net.sourceforge.pmd.lang.ast.AbstractNode: java.lang.String getImage()>;net.sourceforge.pmd.lang.ast.xpath.Attribute.getValue;42;isAccessible=false;
Method.invoke;<net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration: boolean isInterface()>;net.sourceforge.pmd.lang.ast.xpath.Attribute.getValue;42;isAccessible=false;
Method.invoke;<net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration: boolean isNested()>;net.sourceforge.pmd.lang.ast.xpath.Attribute.getValue;42;isAccessible=false;
Method.invoke;<net.sourceforge.pmd.lang.java.ast.ASTFormalParameter: boolean isArray()>;net.sourceforge.pmd.lang.ast.xpath.Attribute.getValue;42;isAccessible=false;
Method.invoke;<net.sourceforge.pmd.lang.java.ast.ASTFormalParameter: boolean isVarargs()>;net.sourceforge.pmd.lang.ast.xpath.Attribute.getValue;42;isAccessible=false;
Method.invoke;<net.sourceforge.pmd.lang.java.ast.ASTReferenceType: boolean isArray()>;net.sourceforge.pmd.lang.ast.xpath.Attribute.getValue;42;isAccessible=false;
Method.invoke;<net.sourceforge.pmd.lang.java.ast.AbstractJavaAccessNode: boolean isAbstract()>;net.sourceforge.pmd.lang.ast.xpath.Attribute.getValue;42;isAccessible=false;
Method.invoke;<net.sourceforge.pmd.lang.java.ast.AbstractJavaAccessNode: boolean isFinal()>;net.sourceforge.pmd.lang.ast.xpath.Attribute.getValue;42;isAccessible=false;
Method.invoke;<net.sourceforge.pmd.lang.java.ast.AbstractJavaAccessNode: boolean isSynchronized()>;net.sourceforge.pmd.lang.ast.xpath.Attribute.getValue;42;isAccessible=false;
